name: Secret Scanner Service
description: Scans secret in repository
inputs:
  target:
    description: Path of the checked out repository. Default to <github.workspace>/target.
    required: false
    default: target
  debug:
    description: If "true", print debug messages.
    required: false
  mode:
    description: Type of scan. Either 'commit' or 'repo'. This setting is internal, and you are not meant to specify it.
    required: false
    default: commit
  docker_image:
    description: Use a local docker image instead of the registry
    required: false
  repo_name:
    description: Name of the scanned repo if different from the repo that the workflow runs in.
    required: false
  batch_size:
    description: Number of commits to scan in a single job.
    required: false
  offline:
    description: Do not report scan result to Secret Scanner Service.
    required: false
  current_commit:
    description: Commit hash of the commit that triggers this job.
    required: false
  internal_auth_token:
    description: Auth token used to talk to the secrets service.
    required: false
  docker_registry:
    description: Docker registry to use
    default: ghcr.io
    required: false
runs:
  using: "composite"
  steps:
    - name: Clone repository
      uses: actions/checkout@v4
      if: inputs.mode == 'commit'
      with:
        fetch-depth: 0
        path: ${{ inputs.target }}
    - name: Load the prebuilt docker image
      shell: bash
      if: inputs.docker_image != null
      run: |
        docker load -i "./${{ inputs.docker_image }}"
        docker tag sss-scanner:latest ${{ inputs.docker_registry }}/aristanetworks/secret-scanner-service:main
    - name: Run scanner
      shell: bash
      run: |
        docker run --rm -v ./${{ inputs.target }}:/tmp -w /tmp --name sss-scanner\
          ${{ inputs.internal_auth_token && format('--env "JWT={0}"', inputs.internal_auth_token) }} \
          ${{ inputs.docker_registry }}/aristanetworks/secret-scanner-service:main \
          scanner "${{ inputs.mode }}" /tmp github \
          ${{ inputs.repo_name || github.repository }} \
          --json-file output.json \
          --markdown-file job_summary.md \
          ${{ inputs.debug && '--debug' }} \
          ${{ inputs.offline == 'true' && '--offline' || '' }} \
          ${{ inputs.batch_size && format('--batch-size {0}', inputs.batch_size) }} \
          ${{ inputs.current_commit && format('--current-commit {0}', inputs.current_commit) }} \
          ${{ github.event_name == 'pull_request' && format('--since-commit {0}', github.event.pull_request.base.sha) || ''}}
    - name: Write result to summary
      shell: bash
      if: ${{ always() }}
      run: cat ./${{ inputs.target }}/job_summary.md >> $GITHUB_STEP_SUMMARY
    - name: Upload scan results as artifacts
      uses: actions/upload-artifact@v4
      if: inputs.mode != 'repo'
      with:
        name: Scan results
        path: |
          ./${{ inputs.target }}/output.json
          ./${{ inputs.target }}/job_summary.md
