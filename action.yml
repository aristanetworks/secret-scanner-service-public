name: Secret Scanner Service
description: Scans secret in repository
inputs:
  mode:
    description: Mode of scanning
    required: false
    default: commit
  vcs:
    description: Version control system of the repo
    required: false
    default: github
  offline:
    description: Send/apply scan result to service db
    required: false
    default: "true"
  debug:
    description: If "true", print debug messages.
    required: false
  internal_auth_token:
    description: Auth token used to talk to the secrets service.
    required: false
  docker_registry:
    description: Docker registry to use
    default: ghcr.io
    required: false
  docker_image:
    description: Use a local docker image instead of the registry
    required: false
runs:
  using: "composite"
  steps:
    - name: Clone repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: target
    - name: Load the prebuilt docker image
      shell: bash
      if: inputs.docker_image != null
      run: |
        docker load -i "./${{ inputs.docker_image }}"
        docker tag secret-scanner:latest ${{ inputs.docker_registry }}/aristanetworks/secret-scanner-service:latest
    - name: Run scanner
      shell: bash
      run: >
        docker run
        --rm
        --env SSS_SERVICE_URL="https://secret-scanner-service.infra.corp.arista.io/api/v1"
        ${{ inputs.internal_auth_token && format('--env "JWT={0}"', inputs.internal_auth_token) }}
        --name secret-scanner
        -v ./target:/target
        ${{ inputs.docker_registry }}/aristanetworks/secret-scanner-service:latest
        ${{ inputs.mode }}
        ${{ (inputs.mode != 'commit' && inputs.offline) && '--offline' || '' }}
        ${{ github.event_name == 'pull_request' && format('--since-commit {0}', github.event.pull_request.base.sha) || ''}}
        ${{ inputs.vcs }}
        ${{ github.repository }}
        /target
        --json-file output.json
        --markdown-file job_summary.md
        ${{ inputs.debug && '--debug' }}
    - name: Write result to summary 
      shell: bash
      if: ${{ always() }}
      run: |
        cat ./target/job_summary.md >> $GITHUB_STEP_SUMMARY
    - name: Upload scan results as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Scan results
        path: |
          ./target/output.json
          ./target/job_summary.md
